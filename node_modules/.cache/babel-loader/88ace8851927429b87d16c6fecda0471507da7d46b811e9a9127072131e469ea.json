{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Downloads\\\\2f4eb167-bfef-49e9-961b-e81de2ed3322\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.jsx\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst API = \"\";\nexport const AuthProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // loading khi app khởi động\n\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"user\");\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n  }, [user]);\n  const login = async (email, password) => {\n    try {\n      const res = await axios.get(\"\".concat(API, \"/users\"), {\n        params: {\n          email: email.trim(),\n          password: password.trim()\n        }\n      });\n      if (res.data.length === 0) {\n        throw new Error(\"Email hoặc mật khẩu không đúng\");\n      }\n      const loggedInUser = res.data[0];\n      setUser(loggedInUser);\n      return loggedInUser;\n    } catch (err) {\n      throw err;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Ui6DLq5vMU2GgsRY6PPBrtV3hI8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","API","AuthProvider","_ref","_s2","children","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","login","email","password","res","get","concat","params","trim","data","length","Error","loggedInUser","err","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pc/Downloads/2f4eb167-bfef-49e9-961b-e81de2ed3322/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nconst API = \"\";\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true); // loading khi app khởi động\r\n\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem(\"user\");\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }, [user]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.get(`${API}/users`, {\r\n        params: {\r\n          email: email.trim(),\r\n          password: password.trim(),\r\n        },\r\n      });\r\n\r\n      if (res.data.length === 0) {\r\n        throw new Error(\"Email hoặc mật khẩu không đúng\");\r\n      }\r\n\r\n      const loggedInUser = res.data[0];\r\n      setUser(loggedInUser);\r\n      return loggedInUser;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AACnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,MAAME,GAAG,GAAG,EAAE;AAEd,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,GAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACbH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IAChC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,IAAIa,IAAI,EAAE;MACRK,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACV,IAAI,CAAC,CAAC;IACpD,CAAC,MAAM;MACLK,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IACjC;EACF,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,MAAMY,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,IAAAC,MAAA,CAAItB,GAAG,aAAU;QAC1CuB,MAAM,EAAE;UACNL,KAAK,EAAEA,KAAK,CAACM,IAAI,CAAC,CAAC;UACnBL,QAAQ,EAAEA,QAAQ,CAACK,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC;MAEF,IAAIJ,GAAG,CAACK,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACzB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACnD;MAEA,MAAMC,YAAY,GAAGR,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC;MAChCnB,OAAO,CAACsB,YAAY,CAAC;MACrB,OAAOA,YAAY;IACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBxB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAAE3B,IAAI;MAAEY,KAAK;MAAEa,MAAM;MAAEvB;IAAQ,CAAE;IAAAH,QAAA,EAC3DA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,GAAA,CAlDWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}