{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Downloads\\\\2f4eb167-bfef-49e9-961b-e81de2ed3322\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/AuthContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { fetchUsers } from '../services/api';\nimport bcrypt from 'bcryptjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    const users = await fetchUsers();\n    const matchedUser = users.find(user => user.email === email && bcrypt.compareSync(password, user.password));\n    if (!matchedUser) {\n      throw new Error('Sai email hoặc mật khẩu');\n    }\n    setUser(matchedUser);\n    return matchedUser;\n  };\n  const logout = () => setUser(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","fetchUsers","bcrypt","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","login","email","password","users","matchedUser","find","compareSync","Error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/pc/Downloads/2f4eb167-bfef-49e9-961b-e81de2ed3322/src/pages/Login.jsx"],"sourcesContent":["// context/AuthContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport { fetchUsers } from '../services/api';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = async (email, password) => {\r\n    const users = await fetchUsers();\r\n    const matchedUser = users.find(\r\n      (user) => user.email === email && bcrypt.compareSync(password, user.password)\r\n    );\r\n\r\n    if (!matchedUser) {\r\n      throw new Error('Sai email hoặc mật khẩu');\r\n    }\r\n\r\n    setUser(matchedUser);\r\n    return matchedUser;\r\n  };\r\n\r\n  const logout = () => setUser(null);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMC,KAAK,GAAG,MAAMd,UAAU,CAAC,CAAC;IAChC,MAAMe,WAAW,GAAGD,KAAK,CAACE,IAAI,CAC3BP,IAAI,IAAKA,IAAI,CAACG,KAAK,KAAKA,KAAK,IAAIX,MAAM,CAACgB,WAAW,CAACJ,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,CAC9E,CAAC;IAED,IAAI,CAACE,WAAW,EAAE;MAChB,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEAR,OAAO,CAACK,WAAW,CAAC;IACpB,OAAOA,WAAW;EACpB,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAMT,OAAO,CAAC,IAAI,CAAC;EAElC,oBACEP,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEE,KAAK;MAAEQ;IAAO,CAAE;IAAAX,QAAA,EAClDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAxBWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA0BzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9B,UAAU,CAACM,WAAW,CAAC;AAAA;AAACwB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}